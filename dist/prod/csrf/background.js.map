{"mappings":"kBAAMA,EAAY,GACZC,EAAU,GA+BhBC,QAAQC,QAAQC,UAAUC,aArBHC,IARA,IAAIC,EAYR,YAAZD,EAAQE,MAAuBF,EAAQG,OAASR,EAAWK,EAAQI,OAE9DV,EAAaM,EAAQI,MAAQR,QAAQS,WAAWC,oBAAoBC,YAAYb,EAAaM,EAAQI,OACrGR,QAAQS,WAAWC,oBAAoBE,eAAed,EAAaM,EAAQI,MAG/EV,EAAaM,EAAQI,MAlBFH,EAkB2BD,EAAQG,MAjBlDM,UACEC,EAAe,CAAIC,KAAI,eAAkBR,MAAOF,UACtDQ,EAAEG,eAAeC,KAAKH,IACdE,eAAgBH,EAAEG,kBAe1BjB,EAAWK,EAAQI,KAAOJ,EAAQG,MAElCP,QAAQS,WAAWC,oBAAoBP,YACnCL,EAAaM,EAAQI,KAAG,CACvBU,KAAI,IAAMd,EAAQI","sources":["src/csrf/background.js"],"sourcesContent":["const csrfHandlers = {};\nconst csrfValues = {};\n\nconst createCsrfHandler = (csrfToken) => {\n    return (e) => {\n        const csrfTokenHeader = {name: 'X-CSRF-TOKEN', value: csrfToken}\n        e.requestHeaders.push(csrfTokenHeader);\n        return {requestHeaders: e.requestHeaders};\n    }\n}\n\nconst handleMessage = (request) => {\n    // and the listener is not already added then add listener\n    // if the incomming reqest is for adding a new csrf token\n\n    if(request.type == 'csrf-add' && (request.value != csrfValues[request.url])) {\n        // remove previously registered listener if there is one\n        if (csrfHandlers[request.url] && browser.webRequest.onBeforeSendHeaders.hasListener(csrfHandlers[request.url])) {\n            browser.webRequest.onBeforeSendHeaders.removeListener(csrfHandlers[request.url]);\n        }\n        // add new listener\n        csrfHandlers[request.url] = createCsrfHandler(request.value);\n        csrfValues[request.url] = request.value;\n\n        browser.webRequest.onBeforeSendHeaders.addListener(\n            csrfHandlers[request.url],\n            {urls: [`${request.url}/*`]},\n            [\"blocking\", \"requestHeaders\"]\n        );\n    }\n}\n\nbrowser.runtime.onMessage.addListener(handleMessage);"],"names":["$ef0b400c17cad064277db80fe6c51c1f$var$csrfHandlers","$ef0b400c17cad064277db80fe6c51c1f$var$csrfValues","browser","runtime","onMessage","addListener","request","csrfToken","type","value","url","webRequest","onBeforeSendHeaders","hasListener","removeListener","e","csrfTokenHeader","name","requestHeaders","push","urls"],"version":3,"file":"background.js.map"}